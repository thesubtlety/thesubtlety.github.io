<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on The Subtlety</title>
    <link>https://www.thesubtlety.com/post/</link>
    <description>Recent content in Posts on The Subtlety</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Mar 2020 16:30:56 -0800</lastBuildDate>
    
	<atom:link href="https://www.thesubtlety.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Write a Hashcat Module</title>
      <link>https://www.thesubtlety.com/post/how-to-write-a-hashcat-module/</link>
      <pubDate>Mon, 02 Mar 2020 16:30:56 -0800</pubDate>
      
      <guid>https://www.thesubtlety.com/post/how-to-write-a-hashcat-module/</guid>
      <description>There&#39;s not a lot written about creating new Hashcat modules. This is a brief tour of how I went about adding a new module and something I wish I had available a week ago. Hopefully after reading this you have a better understanding of how the pieces work and will enable you to more easily add new Hashcat modules.
For what it&#39;s worth, this is written from the perspective of someone who care barely read C.</description>
    </item>
    
    <item>
      <title>How to Use the Shodan API at Scale</title>
      <link>https://www.thesubtlety.com/post/2019-12-07-how-to-use-shodan-api-at-scale/</link>
      <pubDate>Tue, 10 Dec 2019 18:07:57 -0800</pubDate>
      
      <guid>https://www.thesubtlety.com/post/2019-12-07-how-to-use-shodan-api-at-scale/</guid>
      <description>This is a quick post mostly for refreshing my memory in the future. I recently wanted to download the data Shodan had on a large corporate IP space with disparate ranges and several hundred thousand IP addresses for post processing.
As far as I can tell the Shodan help docs are scattered across too many pages and domains and subdomains. There are a few guides out there on the basics of Shodan CLI and API but I didn&#39;t see anything that documented things at a slightly larger scale so here are a few quick notes on gathering this data.</description>
    </item>
    
    <item>
      <title>Brute Forcing 389-ds PBKDF2 Passwords</title>
      <link>https://www.thesubtlety.com/post/a-389-ds-pbkdf2-password-checker/</link>
      <pubDate>Mon, 23 Sep 2019 20:52:14 -0700</pubDate>
      
      <guid>https://www.thesubtlety.com/post/a-389-ds-pbkdf2-password-checker/</guid>
      <description>Several times now I&#39;ve run across password hashes created by 389-ds, RedHat&#39;s open source LDAP Directory Server solution. During a red team past operation I discovered a backup LDIF file which included hashed user passwords (think NTDS.dit but not as catastrophic). A number of the hashes were in prepended with PBKDF2_SHA256.
While hashcat and john the ripper have support for most algorithms, they are at the moment lacking support for 389-ds&#39;s PBKDF2_SHA256 implementation.</description>
    </item>
    
    <item>
      <title>Empire Python Implant on Windows</title>
      <link>https://www.thesubtlety.com/post/empire-python-implant-on-windows/</link>
      <pubDate>Thu, 29 Aug 2019 16:40:37 -0700</pubDate>
      
      <guid>https://www.thesubtlety.com/post/empire-python-implant-on-windows/</guid>
      <description>A while back I was playing around with Empire (before it was shuttered, RIP) and bypassing a certain antivirus software. There were decent signatures for the basic powershell usage, but knowing Python was installed on the target Windows endpoints, I tried to run the Empire Python payload on Windows. It didn&#39;t work. Turns out, it&#39;s trivial to get things working again.
If you generate a basic Python stager with stock Empire, we see an initial checkin to the server</description>
    </item>
    
    <item>
      <title>Monkeying Around: Patching the boto3 User-Agent</title>
      <link>https://www.thesubtlety.com/post/patching-boto3-useragent/</link>
      <pubDate>Sat, 16 Feb 2019 16:32:17 -0800</pubDate>
      
      <guid>https://www.thesubtlety.com/post/patching-boto3-useragent/</guid>
      <description>I was recently doing some testing in AWS with some &amp;ldquo;obtained&amp;rdquo; access keys. Part of this engagement was to identify some threshold at which the blue team was noticing and engaging with suspicious activity and as such we were running some automated tooling. In AWS this can mean bruteforcing services and creating quite a bit of logs.
After not so long we got a request asking if we were up to anything - success!</description>
    </item>
    
    <item>
      <title>Decrypting Jenkins 2 Credentials</title>
      <link>https://www.thesubtlety.com/post/2017-06-21-decrypting-jenkins2-credentials/</link>
      <pubDate>Wed, 21 Jun 2017 23:07:11 -0700</pubDate>
      
      <guid>https://www.thesubtlety.com/post/2017-06-21-decrypting-jenkins2-credentials/</guid>
      <description>I like Jenkins. It&#39;s a good orchestration tool and provides remote code execution as a service.
If your user permissions give you access to the script console /script it&#39;s trivial to obtain a shell. The developers explicitly call this out in their documentation as well so it&#39;s a feature, not a bug. Of course if you can create a job you can run shell commands as well, but I&#39;ll leave that for another time.</description>
    </item>
    
    <item>
      <title>Using subTee&#39;s katz to Reflectively Load an exe</title>
      <link>https://www.thesubtlety.com/post/2017-04-19-using-katz-to-reflectively-load-exe/</link>
      <pubDate>Wed, 19 Apr 2017 18:19:01 -0700</pubDate>
      
      <guid>https://www.thesubtlety.com/post/2017-04-19-using-katz-to-reflectively-load-exe/</guid>
      <description>I haven&#39;t seen this specifically outlined anywhere so I figured I&#39;d write a short post to go over using subTee&#39;s Katz2.0 program to create a custom binary that loads mimikatz (or whatever executable you&#39;d like) into memory. Casey Smith (subTee) and company have created some incredible tools that have made my life easier, so hats off to them.
Reflective Injection The following steps will create a custom binary with an encrypted and encoded mimikatz binary string which will load mimikatz into memory through reflective PE injection.</description>
    </item>
    
    <item>
      <title>Informacast Singlewire Insecure JMX Config to RCE</title>
      <link>https://www.thesubtlety.com/post/2017-03-13-informacast-singlewire-insecure-jmx/</link>
      <pubDate>Mon, 13 Mar 2017 23:17:52 -0700</pubDate>
      
      <guid>https://www.thesubtlety.com/post/2017-03-13-informacast-singlewire-insecure-jmx/</guid>
      <description>I recently came across a good reminder to double check listening ephemeral ports. The organization in question was using the Informacast Singlewire Desktop Notifier v2.0 application. It allows organizations &amp;ldquo;to display a pop-up window on top of other running applications to inform users of important information&amp;rdquo; or to send desktop alerts to users in geographic regions.
After some enumeration, it looked like it was exposing a JMX Remote management port of we&#39;ll say port 42424.</description>
    </item>
    
    <item>
      <title>The OSCE | Cracking the Perimeter Review</title>
      <link>https://www.thesubtlety.com/post/2017-02-11-osce-review/</link>
      <pubDate>Sat, 11 Feb 2017 13:05:48 -0800</pubDate>
      
      <guid>https://www.thesubtlety.com/post/2017-02-11-osce-review/</guid>
      <description>I recently took the CTP course by Offensive Security and passed the OSCE exam. Now there are a few dozen reviews on this thing, but I&#39;ll add my own take here anyway.
Pre Course You can&#39;t just register for the CTP - you need to solve a small challenge first: http://fc4.me/. When I initially thought about taking this course, part of this challenge was beyond me. But to quote g0tmi1k:</description>
    </item>
    
    <item>
      <title>Search Shodan and Censys With Shocens</title>
      <link>https://www.thesubtlety.com/post/2017-01-25-query-shodan-and-censys-with-shocens/</link>
      <pubDate>Wed, 25 Jan 2017 21:06:57 -0800</pubDate>
      
      <guid>https://www.thesubtlety.com/post/2017-01-25-query-shodan-and-censys-with-shocens/</guid>
      <description>Recon is close to step one in any pentest. When it comes to passively pulling data on infrastructure assets you have a number of options. ARIN can help identify an organization&#39;s registered net blocks, but that&#39;s only part of the picture. With many organizations based in or using cloud services, those assets won&#39;t necessarily be registered to your target.
And when AWS for example can tie directly into a datacenter, these servers become quite valuable.</description>
    </item>
    
    <item>
      <title>Persistent C2 with dnscat2</title>
      <link>https://www.thesubtlety.com/post/persistent-dnscat2/</link>
      <pubDate>Mon, 19 Dec 2016 17:19:40 -0800</pubDate>
      
      <guid>https://www.thesubtlety.com/post/persistent-dnscat2/</guid>
      <description>Occasionally an environment has strict outbound rules with all traffic going through an authenticated proxy. This hampers exfiltration, especially if you don&#39;t currently have valid credentials but need a foothold into an environment without phishing for instance. If we can find a live network jack in some accessible place and the switch hands out an IP address via DHCP along with DNS servers, we can more than likely obtain a foothold into the network.</description>
    </item>
    
    <item>
      <title>OpenDNS&#39;s AppSec Training Lab</title>
      <link>https://www.thesubtlety.com/post/opendnss-appsec-training-lab/</link>
      <pubDate>Sun, 23 Aug 2015 00:27:58 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/opendnss-appsec-training-lab/</guid>
      <description>I came across OpenDNS Security Ninjas AppSec Training Lab not too long ago and found its simplicity rather enjoyable. It&#39;s a simple web app written in PHP which illustrates each of the OWASP Top 10 categories. As I was going through the exercises I found myself checking to see how the vulnerable code was written and how the issues could be remediated.
Since the lab is geared towards beginners, I thought it might be helpful to provide brief explanations along with links to the relevant lines of source code.</description>
    </item>
    
    <item>
      <title>The OSCP | Penetration Testing With Kali Linux</title>
      <link>https://www.thesubtlety.com/post/the-oscp-penetration-testing-with-kali-linux/</link>
      <pubDate>Sat, 20 Dec 2014 22:03:29 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/the-oscp-penetration-testing-with-kali-linux/</guid>
      <description>I&#39;ve spent the last few months working through the Penetration Testing with Kali Linux course by Offensive Security which has been an awesome learning experience.
Much has been said on this course and I&#39;ll only briefly go over my experience and takeaways. The following reviews were helpful in making the decision to take the course.
 Review by g0tmi1k Review by recrudesce Review from Buffered.io Review from IODigitalSec Review from SecuritySift   For a little preview of what&#39;s involved, check out the free [Metasploit Unleashed](http://www.</description>
    </item>
    
    <item>
      <title>Building a Web App in Rails</title>
      <link>https://www.thesubtlety.com/post/building-a-web-app-in-rails/</link>
      <pubDate>Fri, 11 Apr 2014 01:57:03 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/building-a-web-app-in-rails/</guid>
      <description>A brilliant software engineering friend and I were recently discussing with another mutual friend the inefficiencies of employees filling out paper forms after completion of a construction job and the inefficiencies of transferring said forms to excel and so on. Said friend and I figured we could probably fix this with a web app for a nominal fee, but which would greatly increase our mutual friends&amp;rsquo; productivity. A win win situation if there ever was one.</description>
    </item>
    
    <item>
      <title>Renewing your StartCom SSL Cert</title>
      <link>https://www.thesubtlety.com/post/renewing-your-startcom-ssl-cert/</link>
      <pubDate>Sat, 15 Mar 2014 00:57:49 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/renewing-your-startcom-ssl-cert/</guid>
      <description>Since I&#39;ve forgotten how to do this over the past year, here are the directions for posterity.
  Startcom sends you a reminder after 50 weeks and opens a window for a renewal. Log in and validate your email and domain using the Validation Wizard. Note, you need to ensure your email is going to forward properly.
  Generate a key and CSR on the server with the following two commands openssl genrsa -out .</description>
    </item>
    
    <item>
      <title>Just the Basics</title>
      <link>https://www.thesubtlety.com/post/just-the-basics/</link>
      <pubDate>Mon, 17 Feb 2014 20:58:31 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/just-the-basics/</guid>
      <description>Things have been busy lately, but I&#39;ve been doing some reading, learning, and playing around in a small VM lab, and thought to briefly document what I&#39;ve done. There is unfortunately nothing groundbreaking here, and nothing too interesting beyond a demonstration.
___ ___ _ _ _ _ | \/ | | | | | (_)| | | . . | ___ | |_ __ _ ___ _ __ | | ___ _ | |_ | |\/| | / _ \| __|/ _` |/ __|| &#39;_ \ | | / _ \ | || __| | | | || __/| |_| (_| |\__ \| |_) || || (_) || || |_ \_| |_/ \___| \__|\__,_||___/| .</description>
    </item>
    
    <item>
      <title>BSidesDC Badge </title>
      <link>https://www.thesubtlety.com/post/bsidesdc-badge/</link>
      <pubDate>Tue, 29 Oct 2013 01:19:19 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/bsidesdc-badge/</guid>
      <description>I recently attended my first security conference: BSidesDC. This isn&#39;t a write up of that experience, although it was quite interesting and I learned a lot via some great sessions. One talk I really enjoyed by @grecs was Malware Analysis 101. Very well presented with lots of great getting started material.
  Anyways, the badges. Pretty cool badges; bottle openers in fact, with fourteen binary bytes all with leading zeroes around the circumference: ascii encoded binary.</description>
    </item>
    
    <item>
      <title>Security Onion Network Configuration and Install</title>
      <link>https://www.thesubtlety.com/post/security-onion-network-configuration-and-install/</link>
      <pubDate>Sat, 19 Oct 2013 02:41:57 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/security-onion-network-configuration-and-install/</guid>
      <description>With apologies to The Onion
  I&#39;ve played around with Security Onion in the past, but have never set up my network to capture or monitor traffic. And while installing Security Onion in a VM and only looking at only local or inter-VM traffic is quite interesting, especially if a person is playing around with Metasploit or something, I wanted to see all network traffic, including my other devices.</description>
    </item>
    
    <item>
      <title>Kippo on the Raspberry Pi</title>
      <link>https://www.thesubtlety.com/post/kippo-on-the-raspberry-pi/</link>
      <pubDate>Tue, 07 May 2013 01:43:15 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/kippo-on-the-raspberry-pi/</guid>
      <description>I recently bought a Raspberry Pi and installed Arch Linux ARM on it. I came across a rather amusing blog post of someone using the honeypot Kippo and thought what fun. See here to watch elite hackers and their mad skillz. That&#39;s the great thing about Kippo - it records user sessions for playback.
Anyways, this post basically walks through what I did to get Kippo and kippo-graph up and running on my RPi.</description>
    </item>
    
    <item>
      <title>Career README.txt</title>
      <link>https://www.thesubtlety.com/post/career-readme-txt/</link>
      <pubDate>Thu, 04 Apr 2013 00:50:49 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/career-readme-txt/</guid>
      <description>I read this article by Patrick McKenzie a while back, came across it again, and decided it&#39;s worth reading weekly. I&#39;ve pulled out some of his bolded points. But seriously, read the article in it&#39;s entirety. Again. And again.
Don&#39;t Call Yourself a Programmer, And Other Career Advice
  Modesty is not a career enhancing character trait
  Network. In person.
  Learn how to negotiate
  Get good at Enterprise Sales</description>
    </item>
    
    <item>
      <title>Rob Fuller on Getting a Job in InfoSec</title>
      <link>https://www.thesubtlety.com/post/rob-fuller-on-getting-a-job-in-infosec/</link>
      <pubDate>Fri, 22 Feb 2013 01:12:37 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/rob-fuller-on-getting-a-job-in-infosec/</guid>
      <description>I was fortunate enough to get a good job in IT right out of college. Not in InfoSec, but in telecom, and in specific, service delivery. I&#39;m learning an incredible amount - from enterprise telephony environment to working in a highly complex work environment to leading delivery on new intent projects. But it&#39;s not InfoSec.
In my search for ways to break into InfoSec, I&#39;ve come across numerous posts, advice, and tips to do just that.</description>
    </item>
    
    <item>
      <title>On the Dumbest Ideas in Computer Security</title>
      <link>https://www.thesubtlety.com/post/on-the-dumbest-ideas-in-computer-security/</link>
      <pubDate>Sat, 15 Sep 2012 22:22:40 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/on-the-dumbest-ideas-in-computer-security/</guid>
      <description>The other day I came across an article by Marcus J Ranum on the six dumbest ideas in computer security which were very simple yet struck me as profound. I&#39;ll summarize them here for future reference.
 Default Permit  Back when computer networks were still in their infancy, there were few avenues for attack. With those avenues turned off, all else was allowed. Hence &amp;ldquo;default permit.&amp;rdquo; Another area is code execution: anything clicked is permitted to run, unless stopped by antivirus or the likes.</description>
    </item>
    
    <item>
      <title>Breaking into Security</title>
      <link>https://www.thesubtlety.com/post/breaking-into-security/</link>
      <pubDate>Mon, 25 Jun 2012 18:21:26 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/breaking-into-security/</guid>
      <description>This blogging thing is harder than it seems - the what to write, the time to write. I came across another interesting blog post from Krebs on Security, who interviewed Thomas Ptackek, founder of Matasano Security, on how to get into the field of computer security. As this is precisely my intent, I gave it a quick read through and thought to post a to-do for myself.
  Learn how to program.</description>
    </item>
    
    <item>
      <title>My Random Ramblings</title>
      <link>https://www.thesubtlety.com/post/random-ramblings/</link>
      <pubDate>Wed, 04 Jan 2012 21:12:53 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/random-ramblings/</guid>
      <description>Here, shall I attempt to document some random doings related to computers, security, linuxstuff, windowsstuff, and most likely miscellany.
Apparently typing all this out helps the mind become better at communicating, and who doesn&#39;t want that?
So whether you or another read these ramblings, or I myself re-read them later on in my ever so awe-inspiring, galvanic, exhilarating life, let this be a place for learning and perusing.</description>
    </item>
    
  </channel>
</rss>