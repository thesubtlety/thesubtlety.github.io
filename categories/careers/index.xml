<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Subtlety</title>
    <link>https://www.thesubtlety.com/categories/careers/index.xml</link>
    <description>Recent content on The Subtlety</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://www.thesubtlety.com/categories/careers/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Career README.txt</title>
      <link>https://www.thesubtlety.com/post/career-readme-txt/</link>
      <pubDate>Thu, 04 Apr 2013 00:50:49 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/career-readme-txt/</guid>
      <description>&lt;p&gt;I read this &lt;a href=&#34;http://www.kalzumeus.com/2011/10/28/dont-call-yourself-a-programmer&#34;&gt;article&lt;/a&gt; by Patrick McKenzie a while back, came across it again, and decided it&amp;rsquo;s worth reading weekly. I&amp;rsquo;ve pulled out some of his bolded points. But seriously, read the article in it&amp;rsquo;s entirety. Again. And again.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don&amp;rsquo;t Call Yourself a Programmer, And Other Career Advice&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Modesty is not a career enhancing character trait&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Network. In person.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Learn how to negotiate&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Get good at Enterprise Sales&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Most jobs are never available publicly&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You really want to be attached to Profit Centers&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Describe yourself by what you have accomplished for previous employers vis-a-vis increasing revenues or reducing costs&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You radically overestimate the average skill of the competition because of the crowd you hang around with&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I like this one: Business decisions are made by relatives of chimps, not by rules or algorithms&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Your most important skill is communication. Give the perception that you create value&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;People who are skilled in negotiation make more than those who are not&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Engineers are hired to create business value, not to program things&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Happiness will not be dominated by your career. Work to live.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Rob Fuller on Getting a Job in InfoSec</title>
      <link>https://www.thesubtlety.com/post/rob-fuller-on-getting-a-job-in-infosec/</link>
      <pubDate>Fri, 22 Feb 2013 01:12:37 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/rob-fuller-on-getting-a-job-in-infosec/</guid>
      <description>&lt;p&gt;I was fortunate enough to get a good job in IT right out of college. Not in InfoSec, but in telecom, and in specific, service delivery. I&amp;rsquo;m learning an incredible amount - from enterprise telephony environment to working in a highly complex work environment to leading delivery on new intent projects. But it&amp;rsquo;s not InfoSec.&lt;/p&gt;

&lt;p&gt;In my search for ways to break into InfoSec, I&amp;rsquo;ve come across numerous &lt;a href=&#34;https://www.schneier.com/blog/archives/2012/07/how_to_become_a_1.html&#34;&gt;posts&lt;/a&gt;, &lt;a href=&#34;http://pauldotcom.com/2009/05/getting-started-in-information.html&#34;&gt;advice&lt;/a&gt;, and &lt;a href=&#34;https://krebsonsecurity.com/category/how-to-break-into-security/&#34;&gt;tips&lt;/a&gt; to do just that. And this is great stuff - I&amp;rsquo;m working on the learning and the doing covered in those posts. But I really enjoyed the clear, common sense advice on building a  resume, the job search, interview techniques, brand building, and general career advice given by Rob Fuller. Watch the presentation &lt;a href=&#34;http://vimeo.com/4108726&#34;&gt;here&lt;/a&gt;. (About 50 minutes)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>On the Dumbest Ideas in Computer Security</title>
      <link>https://www.thesubtlety.com/post/on-the-dumbest-ideas-in-computer-security/</link>
      <pubDate>Sat, 15 Sep 2012 22:22:40 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/on-the-dumbest-ideas-in-computer-security/</guid>
      <description>&lt;p&gt;The other day I came across an article by &lt;a href=&#34;http://en.wikipedia.org/wiki/Marcus_J._Ranum&#34;&gt;Marcus J Ranum&lt;/a&gt; on &lt;a href=&#34;http://www.ranum.com/security/computer_security/editorials/dumb/index.html&#34;&gt;the six dumbest ideas in computer security&lt;/a&gt; which were very simple yet struck me as profound. I&amp;rsquo;ll summarize them here for future reference.&lt;/p&gt;

&lt;p&gt;1) Default Permit&lt;/p&gt;

&lt;p&gt;Back when computer networks were still in their infancy, there were few avenues for attack. With those avenues turned off, all else was allowed. Hence &amp;ldquo;default permit.&amp;rdquo; Another area is code execution: anything clicked is permitted to run, unless stopped by antivirus or the likes. The proper solution here is default deny, but this, according to Ranum, takes dedication, thought, and understanding, and so is seldom done. And it allows one to sleep better at night.&lt;/p&gt;

&lt;p&gt;2) Enumerating Badness&lt;/p&gt;

&lt;p&gt;This is a subset of Default Permit, but is interesting as well. As mentioned previously, there were only a few avenues for attack, so if you blocked those vectors, you should be good, right? No, this is &amp;ldquo;enumerating badness.&amp;rdquo; This is a dumb idea because of the incredible amount of badness that exists. Antivirus tries to track the thousands and thousands of viruses, etc and stop them, rather than a solution that tracks the (very few) legitimate applications that regularly run and deny all else. Why is this not a consumer solution in today&amp;rsquo;s world?&lt;/p&gt;

&lt;p&gt;Another great concept is that of &lt;a href=&#34;http://www.ranum.com/security/computer_security/papers/ai/index.html&#34;&gt;&amp;ldquo;Artificial Ignorance&amp;rdquo;&lt;/a&gt;, where you get rid of uninteresting log entries, and keep all else, which, if they are not uninteresting, must be interesting.&lt;/p&gt;

&lt;p&gt;3) Penetrate and Patch&lt;/p&gt;

&lt;p&gt;In regards to one&amp;rsquo;s online resource, you attack it as an attacker would, find a flaw, fix it, and continue searching. There is a brilliant term for this as Ranum says: &amp;ldquo;turd polishing.&amp;rdquo; This process does nothing to make your code better in the long run, but management likes the improved, shiny appearance in the short term. It does not improve the design, rather &amp;ldquo;toughens by trial and error.&amp;rdquo; This seems obvious when one thinks about it, but it is so prevalent that one hardly realizes how dumb it is. Vulnerability researchers publish holes, and holes are patched.&lt;/p&gt;

&lt;p&gt;But if vendors wrote code &amp;ldquo;designed to be secure and reliable, then vulnerability discovery would be tedious.&amp;rdquo; Think Internet Explorer: vulnerabilities have been found for over ten years. Ranum says pen-testing is pointless and pointless is dumb, because one will either find numerous bugs, or nothing comprehensible. Secure by design!&lt;/p&gt;

&lt;p&gt;4) Hacking is Cool&lt;/p&gt;

&lt;p&gt;Ranum say here that &amp;ldquo;hacking is a social problem.&amp;rdquo; With internet anonymity, timid people can become criminals, and media portrays them as &amp;ldquo;whiz kids&amp;rdquo;. Ultimately, teaching oneself exploits means investing time learning tools and techniques that become useless when everyone has patched that particular hole. Ones professional skill-set &amp;ldquo;becomes dependent on penetrate and patch&amp;rdquo; and you have arms race again.&lt;/p&gt;

&lt;p&gt;While I see what Ranum is saying here, I believe knowing how these exploits work, and how holes are exploited is still useful to know. I do entirely agree with this statement, though: &amp;ldquo;it would be more sensible to design security systems that are hack-proof than to learn how to identify security systems that are dumb.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;5) Educating Users&lt;/p&gt;

&lt;p&gt;This is interesting as well, because it, too, seems so prevalent and accepted today. Education is good, right? If &amp;ldquo;educating users was going to work, it would have worked by now.&amp;rdquo; People are easily socially engineered. Ranum likens it to penetrate and patch, and having to &amp;ldquo;patch&amp;rdquo; users every week. He asks &amp;ldquo;why do we need to educate users at all?&amp;rdquo; This is like Default Permit again - &amp;ldquo;Why are users getting executable attachments at all?&amp;rdquo; The root issue is not dumb users, but rather the security architecture that is broken.&lt;/p&gt;

&lt;p&gt;6) Action is Better than Inaction&lt;/p&gt;

&lt;p&gt;Here we have &amp;ldquo;early adopters&amp;rdquo; and &amp;ldquo;pause and thinkers.&amp;rdquo; Ranum says &amp;ldquo;pause and thinkers&amp;rdquo; build more successful, secure, mission-critical systems. He illustrates this with &amp;ldquo;one senior IT executive&amp;rsquo;s roll out plan for a wireless corporate network was &amp;lsquo;wait two years and hire the guy who did a successful wireless deployment for a company larger than us.&amp;rsquo; The technology will be more mature and cheaper by then.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;So: to myself or another reader who has stumbled along this far, I highly recommend (re)reading Ranums entire article. And maybe check out his website, which is full of interesting links. I think a takeaway here is to identify the root cause and fix that, rather than continue turd polishing everything in sight; that is surely a losing battle.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Breaking into Security</title>
      <link>https://www.thesubtlety.com/post/breaking-into-security/</link>
      <pubDate>Mon, 25 Jun 2012 18:21:26 +0000</pubDate>
      
      <guid>https://www.thesubtlety.com/post/breaking-into-security/</guid>
      <description>&lt;p&gt;This blogging thing is harder than it seems - the what to write, the time to write. I came across another interesting blog post from &lt;a href=&#34;http://m.krebsonsecurity.com/2012/06/how-to-break-into-security-ptacek-edition/&#34;&gt;Krebs on Security&lt;/a&gt;,  who interviewed Thomas Ptackek, founder of Matasano Security, on how to get into the field of computer security. As this is precisely my intent, I gave it a quick read through and thought to post a to-do for myself.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Learn how to program. Plugging away with Ruby. Get dabbling in Python and C.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Set up a home lab for experimenting&lt;em&gt;. Done.&lt;/em&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install an old version of Wordpress on a VM.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Use WebScarab or Burp Suite on your ancient Wordpress site.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The best jobs in the field are in application security.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Position yourself near custom software development or get a role in QA.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Find opportunities to practice in your job.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is exciting and encouraging! And because I&amp;rsquo;m already started on a couple of these things, I&amp;rsquo;m well on my way. Thanks Brian Krebs and Thomas Ptacek!&lt;/p&gt;

&lt;p&gt;By the way, the &lt;a href=&#34;http://www.matasano.com/careers/&#34;&gt;careers page&lt;/a&gt; of Matasano security is awesome as far as what to expect when interviewing for a pen testing job.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>